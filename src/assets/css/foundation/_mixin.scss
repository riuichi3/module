@charset "utf-8";
// @import "compass";

@mixin clearfix {
  *zoom: 1;
  &:after {
    content: "";
    display: table;
    clear: both;
  }
  /*
---
name: clearfix
category: -mixin
---
```scss
  @include clearfix;
```
 */
}

$breakpoints: (
  'sp': 'screen and (max-width: 767px)',
  'ta': 'screen and (min-width: 768px) and (max-width: 1024px)',
  'pc': 'screen and (min-width: 768px)',
) !default;

@mixin mq($breakpoint: pc) {
  @media #{map-get($breakpoints, $breakpoint)} {
    @content;
  }
}

/*
---
name: media query
category: -mixin
---
SPファーストで作る想定のため何も指定しなければSPのcss
@include mq()でPC
@include mq(ta)でタブレット
@include mq(sp)でSP。これはスマホだけで適用したい時用
```scss
@include mq(sp) {
  @content;
}
@include mq(ta) {
  @content;
}
@include mq(pc) {
  @content;
}
```
 */

@mixin bold($n: 500) {
  font-weight: bold;
  @include mq(pc) {
    font-weight: $n;
  }
}

/*
---
name: font-weight:bold
category: -mixin
---
spではfont-weight:bold、PCでは$nを適用。$n省略時は500。
```scss
@include bold($n)
```
 */
@mixin pcmaxwidth() {
  @include mq(pc) {
    max-width: $contentWidth;
    margin: auto;
  }
}

@function vw($n, $w: $spWidth) {
  @return $n / $w * 100vw;
}
/*
---
name: vwの数値取得
category: -mixin
---
width,height,margin,padding,font-size,line-heightなどの数値をspデザインの横幅から算出し、デヴァイスの画角に左右されない出力を提供する。<br>第二引数はタブレット用
```scss
  font-size:vw(16);
  padding:vw(30,1024);
```
 */

@function size($n) {
  @return clamp(0px , ($n / $mixinContentWidth * 100vw) ,$n*1px);
}
/*
---
name: 数値取得(PC/タブレット用）
category: -mixin
---
pc/tabletのデザインを基本同じとしたとき、各種サイズの取得用。PC用のサイズを指定することで、tablet用の値も設定する
```scss
  font-size:size(16);
  padding:size(30);
```
 */

@mixin lhCrop($line-height, $capital-letter: 1) {
  &::before {
    content: "";
    display: block;
    height: 0;
    width: 0;
    margin-top: calc((#{$capital-letter} - #{$line-height}) * 0.5em);
  }
}
/*
---
name: テキスト要素の先頭行だけline-heightを取り除き、上ぴったりに揃える
category: -mixin
---
https://coliss.com/articles/build-websites/operation/css/simple-css-remove-top-space.html
```scss
  @include lhCrop($line-height)
```
 */

@mixin whBlockCenter() {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}
/*
---
name: boxの天地左右センター
category: -mixin
---
```scss
  @include whBlockCenter()
```
 */
