@charset "utf-8";
// @import "compass";


@mixin clearfix{
  *zoom: 1;
  &:after {
    content: '';
    display: table;
    clear: both;
  }
/*
---
name: clearfix
category: -mixin
---
```scss
  @include clearfix;
```
 */
}



@mixin fontsize($fs) {
  font-size:#{$fs}px; font-size:#{$fs/10}rem;  
}
/*
---
name: fontsize
category: -mixin
---

font-size:#{引数}px; font-size:#{引数/10}rem;  
に設定
```scss
  @include fontsize(引数);
```
*/


@mixin mq_s(){
  @media screen and (max-width:767px) {
    @content;
  }
}
@mixin mq_m(){
  @media screen and (min-width:768px) and (max-width:1024px) {
    @content;
  }
}
@mixin mq_l(){
  @media screen and (min-width:768px) {
    @content;
  }
}
/*
---
name: media query
category: -mixin
---
```scss
@include mq_s() {
  @content;
}
@include mq_m() {
  @content;
}
@include mq_l() {
  @content;
}
```
 */

 
 @mixin bold($n:500){
  font-weight:bold;
  @include mq_l() {
    font-weight:$n;
  }
}

/*
---
name: font-weight:bold
category: -mixin
---
spではfont-weight:bold、PCでは$nを適用。$n省略時は500。
```scss
@include bold($n)
```
 */
@mixin pcmaxwidth(){
  @include mq_l() {
    max-width:$contentWidth;
    margin:auto;
  }
}
  
@function vw($n,$w:$spWidth) {
  @return $n / $w * 100vw;
}
/*
---
name: vwの数値取得
category: -mixin
---
width,height,margin,padding,font-size,line-heightなどの数値をspデザインの横幅から算出し、デヴァイスの画角に左右されない出力を提供する。<br>第二引数はタブレット用
```scss
  font-size:vw(16);
  padding:vw(30,1024);
```
 */


 @mixin lhCrop($line-height, $capital-letter: 1) {
  &::before {
    content: '';
    display: block;
    height: 0;
    width: 0;
    margin-top: calc((#{$capital-letter} - #{$line-height}) * 0.5em);
  }
}
/*
---
name: テキスト要素の先頭行だけline-heightを取り除き、上ぴったりに揃える
category: -mixin
---
https://coliss.com/articles/build-websites/operation/css/simple-css-remove-top-space.html
```scss
  @include lhCrop($line-height)
```
 */